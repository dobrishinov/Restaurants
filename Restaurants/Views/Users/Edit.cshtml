@model Restaurants.ViewModels.Users.UsersEditVM

@{
    ViewBag.Title = "Edit Profile";
}

<h2>Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Username)

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouriteFoods, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouriteFoods, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouriteFoods, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouritePlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouritePlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.FavouritePlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.PasswordFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Password, new { @class = "form-control"} )
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.ProfileImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.ProfileImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => @Restaurants.Models.AuthenticationManager.LoggedUser.ProfileImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
